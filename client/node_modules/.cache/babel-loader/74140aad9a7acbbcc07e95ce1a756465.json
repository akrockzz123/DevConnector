{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { SetAlert } from \"./alertAction\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../constants/types';\nexport const getPosts = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n    dispatch(getPosts());\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(getPosts());\n    dispatch(SetAlert('Post created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const removeLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n    dispatch(getPosts());\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        postId\n      }\n    });\n    dispatch(getPosts());\n    dispatch(SetAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    //const formData = JSON.stringify(formData)\n    setAuthToken(localStorage.getItem('token'));\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(SetAlert('Comment Addded', 'success'));\n    dispatch(getPost(postId));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const deleteComment = (id, comment_id) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.delete(`/api/posts/comment/${id}/${comment_id}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: comment_id\n    });\n    dispatch(SetAlert('Comment Addded', 'success'));\n    dispatch(getPost(id));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/Actions/post.js"],"names":["axios","setAuthToken","SetAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","type","payload","res","data","err","msg","response","status","addLikes","postId","put","likes","addPost","formData","config","headers","post","removeLikes","deletePost","delete","addComment","localStorage","getItem","getPost","deleteComment","id","comment_id","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nimport { SetAlert } from \"./alertAction\";\r\n\r\nimport {\r\n   GET_POSTS,\r\n   POST_ERROR,\r\n   UPDATE_LIKES,\r\n   DELETE_POST,\r\n   ADD_POST,\r\n   GET_POST,\r\n   ADD_COMMENT,\r\n   REMOVE_COMMENT\r\n} from '../constants/types';\r\n\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n\r\n      \r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addLikes = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {postId, likes: res.data}\r\n        });\r\n        dispatch(getPosts())\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addPost = (formData) => async dispatch => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('/api/posts',formData,config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(getPosts())\r\n        dispatch(SetAlert('Post created','success'));\r\n\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const removeLikes = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {postId, likes: res.data}\r\n        });\r\n        \r\n        dispatch(getPosts())\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deletePost = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.delete(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: {postId}\r\n        });\r\n       \r\n        dispatch(getPosts())\r\n        dispatch(SetAlert('Post removed','success'))\r\n      \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const addComment = (postId,formData) => async dispatch => {\r\n    try {\r\n\r\n        //const formData = JSON.stringify(formData)\r\n        setAuthToken(localStorage.getItem('token'))\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n        const res = await axios.post(`/api/posts/comment/${postId}`,formData,config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(SetAlert('Comment Addded','success'))\r\n        dispatch(getPost(postId))\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteComment = (id,comment_id) => async dispatch => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.delete(`/api/posts/comment/${id}/${comment_id}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: comment_id\r\n        });\r\n        \r\n        dispatch(SetAlert('Comment Addded','success'))\r\n        dispatch(getPost(id))\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getPost = (id) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}