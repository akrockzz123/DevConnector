{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { alertReducer } from \"./Reducers/AlertReducer\";\nimport { UserAuthReducer } from \"./Reducers/authReducer\";\nconst userLogin = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = [];\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  alert: alertReducer,\n  loginAuth: UserAuthReducer\n});\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/store.js"],"names":["createStore","applyMiddleware","combineReducers","composeWithDevTools","thunk","alertReducer","UserAuthReducer","userLogin","localStorage","getItem","JSON","parse","initialState","middleware","reducer","alert","loginAuth","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAsCC,eAAtC,QAA4D,OAA5D;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AAGA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAiG,EAAnH;AAGA,MAAMG,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,MAAMU,OAAO,GAAGZ,eAAe,CAAC;AAACa,EAAAA,KAAK,EAAEV,YAAR;AAAqBW,EAAAA,SAAS,EAAEV;AAAhC,CAAD,CAA/B;AACA,MAAMW,KAAK,GAAGjB,WAAW,CAACc,OAAD,EAASF,YAAT,EAAsBT,mBAAmB,CAACF,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAAzC,CAAzB;AAGA,eAAeI,KAAf","sourcesContent":["import { createStore, applyMiddleware,combineReducers} from \"redux\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { alertReducer } from \"./Reducers/AlertReducer\";\r\n\r\nimport { UserAuthReducer } from \"./Reducers/authReducer\";\r\n\r\n\r\nconst userLogin = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress') ) : { }\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducer = combineReducers({alert: alertReducer,loginAuth: UserAuthReducer})\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}