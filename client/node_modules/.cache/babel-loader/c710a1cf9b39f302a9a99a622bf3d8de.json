{"ast":null,"code":"import axios from \"axios\";\nimport { SetAlert } from \"./alertAction\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from '../constants/types';\nimport { GetUser } from \"./auth\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const res = await axios.get('/api/profile/me');\n    console.log(\"it works\", res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(GetUser());\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const res = await axios.post('/api/profile', formData);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    }); // dispatch(GetUser())\n\n    dispatch(SetAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add experience\n\nexport const addExperience = (formData, history, edit = true) => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); // dispatch(GetUser())\n\n    dispatch(SetAlert(edit ? 'Experience added' : 'Profile Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/Actions/profile.js"],"names":["axios","SetAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","GetUser","setAuthToken","getCurrentProfile","dispatch","localStorage","token","res","get","console","log","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","post","push","addExperience","config","headers","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { SetAlert } from \"./alertAction\";\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE\r\n}\r\nfrom '../constants/types'\r\n\r\nimport { GetUser } from \"./auth\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n\r\n        const res = await axios.get('/api/profile/me');\r\n        console.log(\"it works\",res)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(GetUser())\r\n    } catch(err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//create or update profile\r\n\r\nexport const createProfile = (formData,history,edit = false) => async dispatch => {\r\n    try {\r\n      \r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n        \r\n\r\n        const res = await axios.post('/api/profile',formData);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n       // dispatch(GetUser())\r\n\r\n        dispatch(SetAlert(edit ? 'Profile Updated' : 'Profile Created','success'))\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard')\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// add experience\r\n\r\nexport const addExperience = (formData,history,edit = true) => async dispatch => {\r\n    try {\r\n      \r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const res = await axios.put('/api/profile/experience',formData,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n       // dispatch(GetUser())\r\n\r\n        dispatch(SetAlert(edit ? 'Experience added' : 'Profile Created','success'))\r\n\r\n        \r\n        history.push('/dashboard')\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}