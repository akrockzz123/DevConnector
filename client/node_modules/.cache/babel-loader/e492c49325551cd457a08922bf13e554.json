{"ast":null,"code":"import axios from \"axios\";\nimport { SetAlert } from \"./alertAction\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST } from '../constants/types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(SetAlert('Post created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const removeLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        postId\n      }\n    });\n    dispatch(SetAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/Actions/post.js"],"names":["axios","SetAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","status","addLikes","postId","put","likes","addPost","formData","config","headers","post","removeLikes","deletePost","delete","getPost","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { SetAlert } from \"./alertAction\";\r\nimport {\r\n   GET_POSTS,\r\n   POST_ERROR,\r\n   UPDATE_LIKES,\r\n   DELETE_POST,\r\n   ADD_POST,\r\n   GET_POST\r\n} from '../constants/types';\r\n\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addLikes = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {postId, likes: res.data}\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const addPost = (formData) => async dispatch => {\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post(`/api/posts`,formData,config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(SetAlert('Post created','success'))\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const removeLikes = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {postId, likes: res.data}\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const deletePost = (postId) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.delete(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: {postId}\r\n        });\r\n        dispatch(SetAlert('Post removed','success'))\r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getPost = (id) => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n        \r\n    }catch(err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}