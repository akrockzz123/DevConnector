{"ast":null,"code":"import { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../constants/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport const Posts = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n      break;\n\n    case DELETE_POST:\n      return { ...state,\n        posts: initialState.posts.map(post => post._id !== payload),\n        loading: false\n      };\n      break;\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n      break;\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: initialState.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/Reducers/post.js"],"names":["DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","Posts","state","action","type","payload","map","_id","id","likes"],"mappings":"AAAA,SACIA,WADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,YAJJ,QAKO,oBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAQA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAEN,YAAR,EAAqBO,MAArB,KAAgC;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBF,MAAzB;;AAGA,UAAOC,IAAP;AAEI,SAAKX,SAAL;AAEA,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,KAAK,EAAEQ,OAFJ;AAGHN,QAAAA,OAAO,EAAC;AAHL,OAAP;AAKA;;AACA,SAAKP,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,KAAK,EAAED,YAAY,CAACC,KAAb,CAAmBS,GAAnB,CAAuBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaF,OAA5C,CAFJ;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;AAKJ;;AAEA,SAAKL,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,KAAK,EAAEK,OAFJ;AAGHN,QAAAA,OAAO,EAAC;AAHL,OAAP;AAKJ;;AACA,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHL,QAAAA,KAAK,EAAED,YAAY,CAACC,KAAb,CAAmBS,GAAnB,CAAuBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaF,OAAO,CAACG,EAArB,GAA0B,EAC5D,GAAGV,IADyD;AACpDW,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AADqC,SAA1B,GAEnCX,IAFI,CAFJ;AAKHC,QAAAA,OAAO,EAAE;AALN,OAAP;AAOJ;;AACA;AACI,aAAOG,KAAP;AAnCR;AAqCH,CAzCM;KAAMD,K","sourcesContent":["import {\r\n    DELETE_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n} from '../constants/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport const Posts = (state= initialState,action) => {\r\n    const { type, payload} = action;\r\n\r\n\r\n    switch(type) {\r\n\r\n        case GET_POSTS:\r\n\r\n        return {\r\n            ...state,\r\n            posts :payload,\r\n            loading:false\r\n        };\r\n        break;\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: initialState.posts.map(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        break;\r\n      \r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading:false\r\n            };\r\n        break;\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: initialState.posts.map(post => post._id === payload.id ? {\r\n                    ...post,likes: payload.likes\r\n                }: post),\r\n                loading: false\r\n            }\r\n        break;\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}