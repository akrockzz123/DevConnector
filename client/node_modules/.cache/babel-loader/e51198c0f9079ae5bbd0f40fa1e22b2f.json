{"ast":null,"code":"import axios from \"axios\";\nimport { SetAlert } from \"./alertAction\";\nimport { GetUser } from \"./auth\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from '../constants/types';\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const res = await axios.get('/api/profile/me');\n    console.log(\"it works\", res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(GetUser());\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n    dispatch(GetUser());\n  }\n}; //create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const res = await axios.post('/api/profile', formData);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    }); // dispatch(GetUser())\n\n    dispatch(SetAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add experience\n\nexport const addExperience = (formData, history, edit = true) => async dispatch => {\n  try {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); // dispatch(GetUser())\n\n    dispatch(SetAlert(edit ? 'Experience added' : 'Profile Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add education\n\nexport const addEducation = (formData, history, edit = true) => async dispatch => {\n  try {\n    console.log(\"addeducation\");\n    if (localStorage.token) setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); // dispatch(GetUser())\n\n    dispatch(SetAlert(edit ? 'Education added' : 'Profile Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // delete experiences\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    });\n    dispatch(SetAlert('Experience deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    });\n    dispatch(getCurrentProfile());\n    dispatch(SetAlert('Experience deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //delete account and profiel\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure . This can not be undone')) {\n    try {\n      const res = await axios.delete('/api/profile/');\n      dispatch({\n        type: 'CLEAR_PROFILE'\n      });\n      dispatch({\n        type: 'DELETE_ACCOUNT'\n      });\n      dispatch(SetAlert('Your Account has been permanently deleted', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response,\n          status: err.response.status\n        }\n      });\n    }\n  }\n}; //Get all Profiles\n\nexport const getProfiles = ({\n  keyword\n}) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile?keyword=${keyword}`);\n    dispatch({\n      type: 'GET_PROFILES',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/${userId}`);\n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response.status\n      }\n    });\n  }\n}; //get github repos\n//Get all profile by id\n\nexport const getGithubRepos = username => async dispatch => {\n  console.log(username);\n\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: 'GET_REPOS',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hi/Desktop/DevConnector/client/src/Actions/profile.js"],"names":["axios","SetAlert","GetUser","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","DELETE_ACCOUNT","CLEAR_PROFILE","GET_PROFILES","GET_REPOS","setAuthToken","getCurrentProfile","dispatch","localStorage","token","res","get","console","log","type","payload","data","err","msg","response","status","createProfile","formData","history","edit","post","push","statusText","addExperience","config","headers","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm","getProfiles","keyword","getProfileById","userId","getGithubRepos","username"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { SetAlert } from \"./alertAction\";\r\n\r\nimport { GetUser } from \"./auth\";\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n}\r\nfrom '../constants/types'\r\n\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n\r\n        const res = await axios.get('/api/profile/me');\r\n        console.log(\"it works\",res)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(GetUser())\r\n    } catch(err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        });\r\n        dispatch(GetUser());\r\n    }\r\n}\r\n\r\n//create or update profile\r\n\r\nexport const createProfile = (formData,history,edit = false) => async dispatch => {\r\n    try {\r\n      \r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n        \r\n\r\n        const res = await axios.post('/api/profile',formData);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n       // dispatch(GetUser())\r\n\r\n        dispatch(SetAlert(edit ? 'Profile Updated' : 'Profile Created','success'))\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard')\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// add experience\r\n\r\nexport const addExperience = (formData,history,edit = true) => async dispatch => {\r\n    try {\r\n      \r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const res = await axios.put('/api/profile/experience',formData,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n       // dispatch(GetUser())\r\n\r\n        dispatch(SetAlert(edit ? 'Experience added' : 'Profile Created','success'))\r\n\r\n        \r\n        history.push('/dashboard')\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// add education\r\n\r\nexport const addEducation= (formData,history,edit = true) => async dispatch => {\r\n    try {\r\n      \r\n        console.log(\"addeducation\")\r\n        if(localStorage.token)\r\n        setAuthToken(localStorage.token)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const res = await axios.put('/api/profile/education',formData,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n       // dispatch(GetUser())\r\n\r\n        dispatch(SetAlert(edit ? 'Education added' : 'Profile Created','success'))\r\n\r\n        \r\n        history.push('/dashboard')\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// delete experiences\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: 'UPDATE_PROFILE',\r\n            payload: res.data\r\n        });\r\n        dispatch(SetAlert('Experience deleted','success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//delete education\r\n\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: 'UPDATE_PROFILE',\r\n            payload: res.data\r\n        });\r\n       dispatch(getCurrentProfile())\r\n        dispatch(SetAlert('Experience deleted','success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//delete account and profiel\r\n\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n\r\n    if(window.confirm('Are you sure . This can not be undone'))\r\n    {\r\n        try {\r\n            const res = await axios.delete('/api/profile/');\r\n    \r\n            dispatch({\r\n                type: 'CLEAR_PROFILE',\r\n            });\r\n\r\n            dispatch({\r\n                type: 'DELETE_ACCOUNT'\r\n            })\r\n            dispatch(SetAlert('Your Account has been permanently deleted','success'))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response,status:err.response.status}\r\n            })\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n//Get all Profiles\r\n\r\nexport const getProfiles = ({keyword}) => async dispatch => {\r\n\r\n        try {\r\n            const res = await axios.get(`/api/profile?keyword=${keyword}`);\r\n    \r\n            dispatch({\r\n                type: 'GET_PROFILES',\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response,status:err.response.status}\r\n            })\r\n        }\r\n\r\n    \r\n}\r\n\r\n//Get all profile by id\r\n\r\nexport const getProfileById = (userId) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/profile/${userId}`);\r\n\r\n        dispatch({\r\n            type: 'GET_PROFILE',\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response,status:err.response.status}\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//get github repos\r\n\r\n\r\n\r\n//Get all profile by id\r\n\r\nexport const getGithubRepos = username => async dispatch => {\r\n\r\n    console.log(username)\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: 'GET_REPOS',\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response,status:err.response}\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}